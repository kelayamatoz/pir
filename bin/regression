#!env/bin/python
import argparse
import time
import subprocess

import os

def main():
    parser = argparse.ArgumentParser(description='Run experiments')
    parser.add_argument('-b', '--backend', type=str, action="append", help='Testing Backend')
    parser.add_argument('-t', '--thread', type=int, default=30, help='Number of threads to run')
    parser.add_argument('-p', '--project', action='append', help='project name')
    parser.add_argument('-a', '--app', action='append', help='name of application to run')
    parser.add_argument('-c', '--conti', default=False, action='store_true', 
        help='Continue from previous regression')
    (opts, args) = parser.parse_known_args()
    os.system('mkdir -p logs/')
    os.system('sbt "; project pir; publishAll"')
    apps = opts.app
    if apps is None: apps = []
    if opts.project is None:
        opts.project = ['pirTest', 'test']
    if (opts.backend is None):
        opts.backend = ['Tst', 'MDTst', 'MDHTst']
    for project in opts.project:
        for backend in opts.backend:
            gendir = backend
            if "Tst" in backend:
                gendir = backend + "_" + project
            if not opts.conti:
                os.system('rm -r ../gen/{}'.format(gendir))
            os.system('bin/spatial -t {} -p {} -b {} {} {} --save=false --dot=false --debug=false'.format(opts.thread, project,backend,
                ' '.join(['-a ' + a for a in apps]), ' '.join(args)))
            os.system('bin/log ../gen/{} -d -p {} -b {}'.format(gendir, project,
                opts.backend))
            os.system('bin/log ../gen/{} -s -p {} -b {}'.format(gendir, project,
                opts.backend))

if __name__ == "__main__":
    main()
